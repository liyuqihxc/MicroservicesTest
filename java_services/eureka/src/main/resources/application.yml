server:
  port: 8761 # 你的端口
spring:
#  security:
#    user:
#      name: admin
#      password: admin
  application:
    name: service-registry
eureka:
  instance:
    hostname: localhost # 你的地址
    instance-id: ${spring.application.name}:${server.port}:@project.version@
    prefer-ip-address: true
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
    #默认90s
    lease-expiration-duration-in-seconds: 90
    #服务刷新时间配置，每隔这个时间会主动心跳一次
    #默认30s
    lease-renewal-interval-in-seconds: 30
  client:
    register-with-eureka: false # 表示是否注册自身到eureka服务器，因为当前这个应用就是eureka服务器，没必要注册自身，所以这里是false
    fetch-registry: false # fetchRegistry表示是否从eureka服务器获取注册信息
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
    #eureka client刷新本地缓存时间
    #默认30s
    registry-fetch-interval-seconds: 30
  server:
    #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    #默认30s
    response-cache-update-interval-ms: 3000
    #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    #由于启用了evict其实就用不太上改这个配置了
    #默认180s
    response-cache-auto-expiration-in-seconds: 180
    #启用主动失效，并且每次主动失效检测间隔为
    #默认60s
    eviction-interval-timer-in-ms: 60000
    #关闭自我保护
    enable-self-preservation: false
   